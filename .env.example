# =============================================================================
# AllTrue AI Security Scanner â€“ Example .env
# Copy this file to `.env` for local runs (the Action sets CI=true and ignores
# .env by default). Never commit real secrets to version control.
# =============================================================================

# --- Execution toggles ---
ENABLE_LLM_PENTEST= # true to enable; otherwise leave blank or false
ENABLE_MODEL_SCANNING= # true to enable; otherwise leave blank or false

# --- Core ---
API_URL= #https://api.prod.alltrue-be.com for production
API_KEY=YOUR_ALLTRUE_API_KEY_HERE
CUSTOMER_ID=00000000-0000-0000-0000-000000000000

# --- Inventory selection (organization | project | resource) ---
# organization | project | resource
INVENTORY_SCOPE=resource

# Required when INVENTORY_SCOPE=organization
# ORGANIZATION_ID=00000000-0000-0000-0000-000000000000 # Required when INVENTORY_SCOPE=organization

# Required when INVENTORY_SCOPE=project (comma-separated)
PROJECT_IDS= #00000000-0000-0000-0000-000000000000

# When INVENTORY_SCOPE=resource, provide either organization/project IDs above
# When INVENTORY_SCOPE=resource, provide either target resource IDs or names (not both).
# TARGET_RESOURCE_IDS=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa,bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb
TARGET_RESOURCE_NAMES= # Provide comma-separated resource names, e.g.:
# pytorch_model.bin, OpenAI API Key (NoIssues), Azure OpenAI Endpoint (NewestAzure), Google AI API Key (GemAndEye), IBM Watsonx AI Service Endpoint (SankaYaDeadMon)

# --- Pentest template ---
# Required when ENABLE_LLM_PENTEST=true. Must match template name in AllTrue exactly.
TARGET_TEMPLATE_NAME= # Prompt Injection

# --- Model Scanning ---
# If set to an EMPTY STRING (MODEL_SCAN_POLICIES=), ZERO policies run (not recommended).
# Provide a comma-separated list to pin an explicit set:
MODEL_SCAN_POLICIES= #model-scan-code-execution-prohibited,model-scan-input-output-operations-prohibited,model-scan-network-access-prohibited,model-scan-malware-signatures-prohibited,model-custom-layers-prohibited
MODEL_SCAN_DESCRIPTION= #CI Model Scan from unified entry point

# --- Outcome threshold ---
# critical | poor | moderate | good | excellent
# Fail the job if worst KNOWN outcome is at/above this level; set empty to disable.
FAIL_OUTCOME_AT_OR_ABOVE= #poor

# --- Parallelism / retry ---
MAX_CONCURRENT_PENTESTS= #24
MAX_START_RETRIES= #3
START_RETRY_DELAY= #30
# Optional stagger (seconds) between start requests; 0 disables staggering
START_STAGGER_SECS= #

# --- Polling ---
POLL_TIMEOUT_SECS= #4200
# Options: fail | continue | partial
# partial = try one last GraphQL fetch for an outcome at timeout
POLL_TIMEOUT_ACTION= #partial

# --- Extended GraphQL polling ---
GRAPHQL_EXTENDED_TIMEOUT_SECS= #1800
GRAPHQL_POLL_INTERVAL_SECS= #120

# --- GitHub integration / end-of-run actions ---
GITHUB_TOKEN=YOUR_GITHUB_PAT
GITHUB_REPOSITORY= #owner/repo, e.g. tonyAllTrue/musical-dollop

# On threshold breach: fail | issue | both | none
ON_THRESHOLD_ACTION= #both
# On hard failures: ignore | issue | fail | both
ON_HARD_FAILURES_ACTION= #issue

# Minimum severity (per-category/per-policy) to open issues: CRITICAL | HIGH | MEDIUM | LOW | INFORMATIONAL
CATEGORY_ISSUE_MIN_SEVERITY= #MEDIUM

# Optional issue cosmetics
# Comma-separated labels automatically created if missing
# GITHUB_DEFAULT_LABELS= #security,alltrue,ai-security
# Comma-separated GitHub usernames; must be collaborators
GITHUB_ASSIGNEES= #tonyAllTrue
